{"ast":null,"code":"var _jsxFileName = \"/Users/haifengwang/_Red/_Projects/project_covid-19_app/src/Components/Components-Chart/BarGraph/BarGraph.js\";\nimport React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport CountrySelector from '../CountrySelector/CountrySelector.js';\n\nconst Graph = props => {\n  var country, cases, todayCases, deaths, todayDeaths, recovered, critical;\n  var countryNames = props.allInfo[0].map(x => x.country);\n  const [selectedCountry, setSelectedCountry] = useState(\"Afghanistan\");\n\n  function changeSelectedCountry() {\n    setSelectedCountry(document.getElementById(\"graphCountry\").value);\n  }\n\n  props.allInfo[0].forEach(element => {\n    if (element.country === selectedCountry) {\n      country = element.country;\n      cases = element.cases;\n      todayCases = element.todayCases;\n      deaths = element.deaths;\n      todayDeaths = element.todayDeaths;\n      recovered = element.recovered;\n      critical = element.critical;\n    } else if (!countryNames.includes(selectedCountry)) {\n      country = selectedCountry;\n    }\n  });\n  const data = {\n    labels: [\"Total Cases\", \"New Cases Today\", \"Critical Cases\", \"Total Deaths\", \"Deaths Today\", \"Confirmed Recoveries\"],\n    datasets: [{\n      label: country,\n      backgroundColor: [\"rgba(100,99,200,0.7)\", \"rgba(22, 30, 181, 0.5)\", \"rgba(255,99,132,0.7)\", \"rgba(239, 9, 36, 0.7)\", \"rgba(239, 9, 36, 0.7)\", \"rgba(32, 243, 106, 0.7)\"],\n      borderColor: [\"rgba(100,99,132,1)\", \"rgba(22, 30, 181, 1)\", \"rgba(255,99,132,1)\", \"rgba(239, 9, 36, 1)\", \"rgba(239, 9, 36, 1)\", \"rgba(32, 243, 106, 1)\"],\n      borderWidth: 1,\n      hoverBackgroundColor: [\"rgba(100,99,132,1)\", \"rgba(22, 30, 181, 0.7)\", \"rgba(255,99,132,1)\", \"rgba(239, 9, 36, 1)\", \"rgba(239, 9, 36, 1)\", \"rgba(32, 243, 106, 1)\"],\n      hoverBorderColor: [\"rgba(100,99,132,1)\", \"rgba(22, 30, 181, 1)\", \"rgba(255,99,132,1)\", \"rgba(239, 9, 36, 1)\", \"rgba(239, 9, 36, 1)\", \"rgba(32, 243, 106, 1)\"],\n      data: [cases, todayCases, critical, deaths, todayDeaths, recovered]\n    }]\n  };\n  return React.createElement(\"div\", {\n    className: \"currentPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"COVID-19 in \", country), React.createElement(Bar, {\n    data: data,\n    width: 300,\n    height: 250,\n    options: {\n      maintainAspectRatio: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(CountrySelector, {\n    changeSelectedCountry: changeSelectedCountry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })));\n};\n\nexport default Graph;","map":{"version":3,"sources":["/Users/haifengwang/_Red/_Projects/project_covid-19_app/src/Components/Components-Chart/BarGraph/BarGraph.js"],"names":["React","useState","Bar","CountrySelector","Graph","props","country","cases","todayCases","deaths","todayDeaths","recovered","critical","countryNames","allInfo","map","x","selectedCountry","setSelectedCountry","changeSelectedCountry","document","getElementById","value","forEach","element","includes","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport CountrySelector from '../CountrySelector/CountrySelector.js'\n\n\nconst Graph = (props) => {\n\tvar country, cases, todayCases, deaths, todayDeaths, recovered, critical;\n\tvar countryNames = props.allInfo[0].map(x => x.country)\n  \tconst [selectedCountry, setSelectedCountry] = useState(\"Afghanistan\");\n\tfunction changeSelectedCountry() {\n\t\tsetSelectedCountry(document.getElementById(\"graphCountry\").value);\n  }\n\tprops.allInfo[0].forEach(element => {\n\t\tif (element.country === selectedCountry) {\n\t\t\tcountry = element.country;\n\t\t\tcases = element.cases;\n\t\t\ttodayCases = element.todayCases;\n\t\t\tdeaths = element.deaths;\n\t\t\ttodayDeaths = element.todayDeaths;\n\t\t\trecovered = element.recovered;\n\t\t\tcritical = element.critical;\n\t\t} else if (!countryNames.includes(selectedCountry)) {\n                country = selectedCountry;\n\t}\n})\n \n\tconst data = {\n\t\tlabels: [\n\t\t\t\"Total Cases\", \"New Cases Today\", \"Critical Cases\",\n\t\t\t\"Total Deaths\",\n\t\t\t\"Deaths Today\",\n\t\t\t\"Confirmed Recoveries\"\n    ],\n\t\tdatasets: [{\n\t\t\tlabel: country,\n\t\t\tbackgroundColor: [\n\t\t\t\t\"rgba(100,99,200,0.7)\",\n\t\t\t\t\"rgba(22, 30, 181, 0.5)\",\n\t\t\t\t\"rgba(255,99,132,0.7)\",\n\t\t\t\t\"rgba(239, 9, 36, 0.7)\",\n\t\t\t\t\"rgba(239, 9, 36, 0.7)\",\n\t\t\t\t\"rgba(32, 243, 106, 0.7)\"\n\t\t\t],\n\t\t\tborderColor: [\n\t\t\t\t\"rgba(100,99,132,1)\",\n\t\t\t\t\"rgba(22, 30, 181, 1)\",\n\t\t\t\t\"rgba(255,99,132,1)\",\n\t\t\t\t\"rgba(239, 9, 36, 1)\",\n\t\t\t\t\"rgba(239, 9, 36, 1)\",\n\t\t\t\t\"rgba(32, 243, 106, 1)\"\n\t\t\t],\n\t\t\tborderWidth: 1,\n\t\t\thoverBackgroundColor: [\n\t\t\t\t\"rgba(100,99,132,1)\",\n\t\t\t\t\"rgba(22, 30, 181, 0.7)\",\n\t\t\t\t\"rgba(255,99,132,1)\",\n\t\t\t\t\"rgba(239, 9, 36, 1)\",\n\t\t\t\t\"rgba(239, 9, 36, 1)\",\n\t\t\t\t\"rgba(32, 243, 106, 1)\"\n\t\t\t],\n\t\t\thoverBorderColor: [\n\t\t\t\t\"rgba(100,99,132,1)\",\n\t\t\t\t\"rgba(22, 30, 181, 1)\",\n\t\t\t\t\"rgba(255,99,132,1)\",\n\t\t\t\t\"rgba(239, 9, 36, 1)\",\n\t\t\t\t\"rgba(239, 9, 36, 1)\",\n\t\t\t\t\"rgba(32, 243, 106, 1)\"\n\t\t\t],\n\t\t\tdata: [cases, todayCases, critical, deaths, todayDeaths, recovered]\n    }]\n\t};\n\n\treturn (\n\t\t<div className=\"currentPage\">\n\t\t\t<h2>COVID-19 in {country}</h2>\n\t\t\t<Bar\n\t\t\t\tdata={data}\n\t\t\t\twidth={300}\n\t\t\t\theight={250}\n\t\t\t\toptions={{\n\t\t\t\t\tmaintainAspectRatio: true\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<form>\n\t\t\t\t<CountrySelector changeSelectedCountry={changeSelectedCountry}/>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\nexport default Graph;"]},"metadata":{},"sourceType":"module"}