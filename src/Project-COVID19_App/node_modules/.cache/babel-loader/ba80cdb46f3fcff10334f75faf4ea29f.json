{"ast":null,"code":"var _jsxFileName = \"/Users/haifengwang/_Red/_Projects/project_covid-19_app/src/Components/Components-Chart/BarGraph/BarGraph.js\";\nimport React, { useState } from \"react\";\nimport { Polar } from \"react-chartjs-2\";\nvar country, cases, todayCases, deaths, todayDeaths, recovered, critical;\n\nconst Graph = props => {\n  const [selectedCountry, setSelectedCountry] = useState(\"Canada\"); // console.log(props.allInfo[0][0].country)\n\n  function changeSelectedCountry() {\n    setSelectedCountry(document.getElementById(\"graphCountry\").value);\n  }\n\n  props.allInfo[0].forEach(element => {\n    if (element.country === selectedCountry) {\n      country = element.country;\n      cases = element.cases;\n      todayCases = element.todayCases;\n      deaths = element.deaths;\n      todayDeaths = element.todayDeaths;\n      recovered = element.recovered;\n      critical = element.critical;\n    }\n  });\n  var myDataSet = [{\n    cases\n  }, {\n    todayCases\n  }, {\n    critical\n  }, {\n    deaths\n  }, {\n    todayDeaths\n  }, {\n    recovered\n  }];\n  const dataa = {\n    labels: [\"Total Cases\", \"New Cases Today\", \"Critical Cases\", \"Total Deaths\", \"Deaths Today\", \"Confirmed Recoveries\"],\n    datasets: {\n      label: country,\n      backgroundColor: [\"rgba(100,99,200,0.7)\", \"rgba(22, 30, 181, 0.5)\", \"rgba(255,99,132,0.7)\", \"rgba(239, 9, 36, 0.7)\", \"rgba(239, 9, 36, 0.7)\", \"rgba(32, 243, 106, 0.7)\"],\n      borderColor: [\"rgba(100,99,132,1)\", \"rgba(22, 30, 181, 1)\", \"rgba(255,99,132,1)\", \"rgba(239, 9, 36, 1)\", \"rgba(239, 9, 36, 1)\", \"rgba(32, 243, 106, 1)\"],\n      borderWidth: 1,\n      hoverBackgroundColor: [\"rgba(100,99,132,1)\", \"rgba(22, 30, 181, 0.7)\", \"rgba(255,99,132,1)\", \"rgba(239, 9, 36, 1)\", \"rgba(239, 9, 36, 1)\", \"rgba(32, 243, 106, 1)\"],\n      hoverBorderColor: [\"rgba(100,99,132,1)\", \"rgba(22, 30, 181, 1)\", \"rgba(255,99,132,1)\", \"rgba(239, 9, 36, 1)\", \"rgba(239, 9, 36, 1)\", \"rgba(32, 243, 106, 1)\"],\n      data: [12, 1, 2, 3, 2, 3] // data: [cases, todayCases, critical, deaths, todayDeaths, recovered]\n\n    }\n  };\n  console.log(dataa);\n  return React.createElement(\"div\", {\n    className: \"currentPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"COVID-19 in \", country), React.createElement(Polar, {\n    data: dataa,\n    width: 400,\n    height: 400,\n    options: {\n      maintainAspectRatio: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"graphCountry\",\n    value: selectedCountry,\n    onChange: changeSelectedCountry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n};\n\nexport default Graph;","map":{"version":3,"sources":["/Users/haifengwang/_Red/_Projects/project_covid-19_app/src/Components/Components-Chart/BarGraph/BarGraph.js"],"names":["React","useState","Polar","country","cases","todayCases","deaths","todayDeaths","recovered","critical","Graph","props","selectedCountry","setSelectedCountry","changeSelectedCountry","document","getElementById","value","allInfo","forEach","element","myDataSet","dataa","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","console","log","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Polar } from \"react-chartjs-2\";\n\nvar country, cases, todayCases, deaths, todayDeaths, recovered, critical;\n\nconst Graph = props => {\n   const [selectedCountry, setSelectedCountry] = useState(\"Canada\");\n   // console.log(props.allInfo[0][0].country)\n   function changeSelectedCountry() {\n      setSelectedCountry(document.getElementById(\"graphCountry\").value);\n   }\n   props.allInfo[0].forEach(element => {\n      if (element.country === selectedCountry) {\n         country = element.country;\n         cases = element.cases;\n         todayCases = element.todayCases;\n         deaths = element.deaths;\n         todayDeaths = element.todayDeaths;\n         recovered = element.recovered;\n         critical = element.critical;\n      }\n   });\n\n   var myDataSet = [\n      { cases },\n      { todayCases },\n      { critical },\n      { deaths },\n      { todayDeaths },\n      { recovered }\n   ];\n   const dataa = {\n      labels: [\n         \"Total Cases\",\n         \"New Cases Today\",\n         \"Critical Cases\",\n         \"Total Deaths\",\n         \"Deaths Today\",\n         \"Confirmed Recoveries\"\n      ],\n      datasets: {\n         label: country,\n         backgroundColor: [\n            \"rgba(100,99,200,0.7)\",\n            \"rgba(22, 30, 181, 0.5)\",\n            \"rgba(255,99,132,0.7)\",\n            \"rgba(239, 9, 36, 0.7)\",\n            \"rgba(239, 9, 36, 0.7)\",\n            \"rgba(32, 243, 106, 0.7)\"\n         ],\n         borderColor: [\n            \"rgba(100,99,132,1)\",\n            \"rgba(22, 30, 181, 1)\",\n            \"rgba(255,99,132,1)\",\n            \"rgba(239, 9, 36, 1)\",\n            \"rgba(239, 9, 36, 1)\",\n            \"rgba(32, 243, 106, 1)\"\n         ],\n         borderWidth: 1,\n         hoverBackgroundColor: [\n            \"rgba(100,99,132,1)\",\n            \"rgba(22, 30, 181, 0.7)\",\n            \"rgba(255,99,132,1)\",\n            \"rgba(239, 9, 36, 1)\",\n            \"rgba(239, 9, 36, 1)\",\n            \"rgba(32, 243, 106, 1)\"\n         ],\n         hoverBorderColor: [\n            \"rgba(100,99,132,1)\",\n            \"rgba(22, 30, 181, 1)\",\n            \"rgba(255,99,132,1)\",\n            \"rgba(239, 9, 36, 1)\",\n            \"rgba(239, 9, 36, 1)\",\n            \"rgba(32, 243, 106, 1)\"\n         ],\n         data: [12, 1, 2, 3, 2, 3]\n         // data: [cases, todayCases, critical, deaths, todayDeaths, recovered]\n      }\n   };\n   console.log(dataa);\n   return (\n      <div className=\"currentPage\">\n         <h2>COVID-19 in {country}</h2>\n         <Polar\n            data={dataa}\n            width={400}\n            height={400}\n            options={{\n               maintainAspectRatio: true\n            }}\n         />\n         <input\n            type=\"text\"\n            id=\"graphCountry\"\n            value={selectedCountry}\n            onChange={changeSelectedCountry}\n         ></input>\n      </div>\n   );\n};\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}