{"ast":null,"code":"var _jsxFileName = \"/Users/haifengwang/_Red/_Projects/project_covid-19_app/src/App.js\";\nimport React from \"react\"; // import { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Map from \"./Components/Components-Map/Components-Map.js\";\nimport ComponentPage1 from \"./Components/Components-Header/Header.js\"; // import Chart from './Components/Components-Chart/BarGraph/BarGraph.js'\n\nimport MapButton from './Components/Components-NavBar/MapButton/MapButton.js';\nimport ChartButton from './Components/Components-NavBar/ChartButton/ChartButton.js';\nimport CheckListButton from './Components/Components-NavBar/CheckListButton/CheckListButton.js';\nimport LocalNewsButton from './Components/Components-NavBar/LocalNewsButton/LocalNewsButton.js';\nimport WatchListButton from './Components/Components-NavBar/WatchListButton/WatchListButton.js';\nimport CheckList from './Components/Components-CheckList/CheckList.js';\nimport WatchList from './Components/Components-WatchList/WatchList.js';\nimport LocalNews from './Components/Components-LocalNews/LocalNews.js';\n\nfunction App(props) {\n  // console.log(props);\n  // console.log(props.allInfo);\n  // Test Begins\n  // the main SVG object and its current viewBox\n  var svg = document.querySelector('#worldMap'); // element is the element I want to zoom to\n\n  var element = svg.querySelector('#AD');\n  var bbox = element.getBBox();\n  var viewBox = svg.getAttribute('viewBox');\n  var vbox = viewBox.split(' ');\n  vbox[0] = parseFloat(vbox[0]);\n  vbox[1] = parseFloat(vbox[1]);\n  vbox[2] = parseFloat(vbox[2]);\n  vbox[3] = parseFloat(vbox[3]); // the current center of the viewBox\n\n  var cx = vbox[0] + vbox[2] / 2;\n  var cy = vbox[1] + vbox[3] / 2;\n  var matrix = element.getTransformToElement(svg); // the new center\n\n  var newx = (bbox.x + bbox.width / 2) * matrix.a + matrix.e;\n  var newy = (bbox.y + bbox.height / 2) * matrix.d + matrix.f; // the corresponding top left corner in the current scale\n\n  var absolute_offset_x = vbox[0] + newx - cx;\n  var absolute_offset_y = vbox[1] + newy - cy; // the new scale\n\n  var scale = bbox.width * matrix.a / vbox[2] * 1.2;\n  var scaled_offset_x = absolute_offset_x + vbox[2] * (1 - scale) / 2;\n  var scaled_offset_y = absolute_offset_y + vbox[3] * (1 - scale) / 2;\n  var scaled_width = vbox[2] * scale;\n  var scaled_height = vbox[3] * scale;\n  svg.setAttribute(\"viewBox\", \"\" + scaled_offset_x + \" \" + scaled_offset_y + \" \" + scaled_width + \" \" + scaled_height); // Test Ends\n\n  return (// <Router>\n    //   <div className=\"App\">\n    //       <ComponentPage1 />\n    //       <Switch>\n    //         {/* <Route path=\"/chart\"> */}\n    //           {/* <Chart /> */}\n    //         {/* </Route> */}\n    //         <Route path=\"/checkList\">\n    //           <CheckList /> \n    //         </Route>\n    //         <Route path=\"/map\">\n    React.createElement(Map, {\n      allInfo: props.allInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }) //         </Route>\n    //         <Route path=\"/watchList\">\n    //           <WatchList/>\n    //         </Route>\n    //         <Route path=\"/localNews\">\n    //           <LocalNews/>\n    //         </Route>\n    //       </Switch>\n    //     <nav className=\"NavButtons\">\n    //       <Link to=\"/map\"><MapButton/></Link>\n    //       {/* <Link to=\"/chart\"><ChartButton/></Link> */}\n    //       <Link to=\"/checkList\"><CheckListButton/></Link>\n    //       <Link to=\"/localNews\"><LocalNewsButton/></Link>\n    //       <Link to=\"/watchList\"><WatchListButton/></Link>\n    //     </nav>\n    //   </div>\n    // </Router>\n\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/haifengwang/_Red/_Projects/project_covid-19_app/src/App.js"],"names":["React","Map","ComponentPage1","MapButton","ChartButton","CheckListButton","LocalNewsButton","WatchListButton","CheckList","WatchList","LocalNews","App","props","svg","document","querySelector","element","bbox","getBBox","viewBox","getAttribute","vbox","split","parseFloat","cx","cy","matrix","getTransformToElement","newx","x","width","a","e","newy","y","height","d","f","absolute_offset_x","absolute_offset_y","scale","scaled_offset_x","scaled_offset_y","scaled_width","scaled_height","setAttribute","allInfo"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Map from \"./Components/Components-Map/Components-Map.js\";\nimport ComponentPage1 from \"./Components/Components-Header/Header.js\";\n// import Chart from './Components/Components-Chart/BarGraph/BarGraph.js'\nimport MapButton from './Components/Components-NavBar/MapButton/MapButton.js'\nimport ChartButton from './Components/Components-NavBar/ChartButton/ChartButton.js'\nimport CheckListButton from './Components/Components-NavBar/CheckListButton/CheckListButton.js'\nimport LocalNewsButton from './Components/Components-NavBar/LocalNewsButton/LocalNewsButton.js'\nimport WatchListButton from './Components/Components-NavBar/WatchListButton/WatchListButton.js'\nimport CheckList from './Components/Components-CheckList/CheckList.js'\nimport WatchList from './Components/Components-WatchList/WatchList.js'\nimport LocalNews from './Components/Components-LocalNews/LocalNews.js'\n\n\nfunction App(props) {\n  // console.log(props);\n  // console.log(props.allInfo);\n\n  // Test Begins\n// the main SVG object and its current viewBox\nvar svg = document.querySelector('#worldMap');\n// element is the element I want to zoom to\nvar element = svg.querySelector('#AD');\n\nvar bbox = element.getBBox();\nvar viewBox = svg.getAttribute('viewBox');\nvar vbox = viewBox.split(' ');\n    vbox[0] = parseFloat(vbox[0]);\n    vbox[1] = parseFloat(vbox[1]);\n    vbox[2] = parseFloat(vbox[2]);\n    vbox[3] = parseFloat(vbox[3]);\n\n// the current center of the viewBox\nvar cx=vbox[0]+vbox[2]/2;\nvar cy=vbox[1]+vbox[3]/2;\n\n\nvar matrix = element.getTransformToElement(svg);\n\n// the new center\nvar newx = (bbox.x + bbox.width/2)*matrix.a + matrix.e;\nvar newy = (bbox.y + bbox.height/2)*matrix.d + matrix.f;\n\n// the corresponding top left corner in the current scale\nvar absolute_offset_x = vbox[0] + newx - cx;\nvar absolute_offset_y = vbox[1] + newy - cy;\n\n// the new scale\nvar scale = bbox.width*matrix.a/vbox[2] * 1.2;\n\nvar scaled_offset_x = absolute_offset_x + vbox[2]*(1-scale)/2;\nvar scaled_offset_y = absolute_offset_y + vbox[3]*(1-scale)/2;\nvar scaled_width = vbox[2]*scale;\nvar scaled_height = vbox[3]*scale;\n\nsvg.setAttribute(\"viewBox\", \"\"+scaled_offset_x+\" \"+scaled_offset_y+\" \"+scaled_width+\" \"+scaled_height);\n// Test Ends\n\n  return (\n    // <Router>\n    //   <div className=\"App\">\n    //       <ComponentPage1 />\n    //       <Switch>\n    //         {/* <Route path=\"/chart\"> */}\n    //           {/* <Chart /> */}\n    //         {/* </Route> */}\n    //         <Route path=\"/checkList\">\n    //           <CheckList /> \n    //         </Route>\n    //         <Route path=\"/map\">\n              <Map allInfo={props.allInfo}/>\n    //         </Route>\n    //         <Route path=\"/watchList\">\n    //           <WatchList/>\n    //         </Route>\n    //         <Route path=\"/localNews\">\n    //           <LocalNews/>\n    //         </Route>\n    //       </Switch>\n    //     <nav className=\"NavButtons\">\n    //       <Link to=\"/map\"><MapButton/></Link>\n    //       {/* <Link to=\"/chart\"><ChartButton/></Link> */}\n    //       <Link to=\"/checkList\"><CheckListButton/></Link>\n    //       <Link to=\"/localNews\"><LocalNewsButton/></Link>\n    //       <Link to=\"/watchList\"><WatchListButton/></Link>\n    //     </nav>\n    //   </div>\n    // </Router>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}