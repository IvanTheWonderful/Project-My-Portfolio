{"ast":null,"code":"var _jsxFileName = \"/Users/haifengwang/_Red/_Projects/project_covid-19_app/src/Components/Components-Chart/BarGraph/BarGraph.js\";\nimport React, { useState } from 'react';\nimport { Polar } from 'react-chartjs-2';\nvar country, cases, todayCases, deaths, todayDeaths, recovered, critical;\n\nconst Graph = props => {\n  const [selectedCountry, setSelectedCountry] = useState(\"Canada\");\n\n  function changeSelectedCountry() {\n    setSelectedCountry(document.getElementById(\"graphCountry\").value);\n  }\n\n  console.log();\n  props.allInfo[0].forEach(element => {\n    if (element.country === selectedCountry) {\n      country = element.country;\n      cases = element.cases;\n      todayCases = element.todayCases;\n      deaths = element.deaths;\n      todayDeaths = element.todayDeaths;\n      recovered = element.recovered;\n      critical = element.critical;\n    }\n  }); // const [ selectedCountry, setSelectedCountry] = useState('Select Country')\n\n  const data = {\n    labels: ['Total Cases', 'New Cases Today', 'Critical Cases', 'Total Deaths', 'Deaths Today', 'Confirmed Recoveries'],\n    datasets: {\n      label: {\n        country\n      },\n      backgroundColor: ['rgba(100,99,200,0.7)', 'rgba(22, 30, 181, 0.5)', 'rgba(255,99,132,0.7)', 'rgba(239, 9, 36, 0.7)', 'rgba(239, 9, 36, 0.7)', 'rgba(32, 243, 106, 0.7)'],\n      borderColor: ['rgba(100,99,132,1)', 'rgba(22, 30, 181, 1)', 'rgba(255,99,132,1)', 'rgba(239, 9, 36, 1)', 'rgba(239, 9, 36, 1)', 'rgba(32, 243, 106, 1)'],\n      borderWidth: 1,\n      hoverBackgroundColor: ['rgba(100,99,132,1)', 'rgba(22, 30, 181, 0.7)', 'rgba(255,99,132,1)', 'rgba(239, 9, 36, 1)', 'rgba(239, 9, 36, 1)', 'rgba(32, 243, 106, 1)'],\n      hoverBorderColor: ['rgba(100,99,132,1)', 'rgba(22, 30, 181, 1)', 'rgba(255,99,132,1)', 'rgba(239, 9, 36, 1)', 'rgba(239, 9, 36, 1)', 'rgba(32, 243, 106, 1)'],\n      data: [{\n        cases\n      }, {\n        todayCases\n      }, {\n        critical\n      }, {\n        deaths\n      }, {\n        todayDeaths\n      }, {\n        recovered\n      }]\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"currentPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"COVID-19 in \", country), React.createElement(Polar, {\n    data: data,\n    width: 400,\n    height: 400,\n    options: {\n      maintainAspectRatio: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"graphCountry\",\n    onChange: changeSelectedCountry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default Graph;","map":{"version":3,"sources":["/Users/haifengwang/_Red/_Projects/project_covid-19_app/src/Components/Components-Chart/BarGraph/BarGraph.js"],"names":["React","useState","Polar","country","cases","todayCases","deaths","todayDeaths","recovered","critical","Graph","props","selectedCountry","setSelectedCountry","changeSelectedCountry","document","getElementById","value","console","log","allInfo","forEach","element","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Polar} from 'react-chartjs-2';\n\n\nvar country, cases, todayCases, deaths, todayDeaths, recovered, critical;\n\nconst Graph = (props) => {\n  const [selectedCountry, setSelectedCountry] = useState(\"Canada\")\n  function changeSelectedCountry() {\n    setSelectedCountry(document.getElementById(\"graphCountry\").value)\n  }\n\n  console.log()\n\n  props.allInfo[0].forEach(element => {\n    if (element.country === selectedCountry){\n        country = element.country;\n        cases = element.cases;\n        todayCases = element.todayCases;\n        deaths = element.deaths;\n        todayDeaths = element.todayDeaths;\n        recovered = element.recovered;\n        critical = element.critical;\n    }\n})\n  // const [ selectedCountry, setSelectedCountry] = useState('Select Country')\n  const data = {\n    labels: ['Total Cases', 'New Cases Today', 'Critical Cases', 'Total Deaths', 'Deaths Today', 'Confirmed Recoveries'],\n    datasets: \n        {\n        label: {country},\n        backgroundColor: ['rgba(100,99,200,0.7)', 'rgba(22, 30, 181, 0.5)', 'rgba(255,99,132,0.7)', 'rgba(239, 9, 36, 0.7)', 'rgba(239, 9, 36, 0.7)', 'rgba(32, 243, 106, 0.7)'],\n        borderColor: ['rgba(100,99,132,1)', 'rgba(22, 30, 181, 1)', 'rgba(255,99,132,1)', 'rgba(239, 9, 36, 1)', 'rgba(239, 9, 36, 1)', 'rgba(32, 243, 106, 1)'],\n        borderWidth: 1,\n        hoverBackgroundColor: ['rgba(100,99,132,1)', 'rgba(22, 30, 181, 0.7)', 'rgba(255,99,132,1)', 'rgba(239, 9, 36, 1)', 'rgba(239, 9, 36, 1)', 'rgba(32, 243, 106, 1)'],\n        hoverBorderColor: ['rgba(100,99,132,1)', 'rgba(22, 30, 181, 1)', 'rgba(255,99,132,1)', 'rgba(239, 9, 36, 1)', 'rgba(239, 9, 36, 1)', 'rgba(32, 243, 106, 1)'],\n        data: [{cases}, {todayCases}, {critical}, {deaths}, {todayDeaths}, {recovered}]\n        }\n\n    };\n    \n\n    return (\n    <div className=\"currentPage\">\n      <h2>COVID-19 in {country}</h2>\n      <Polar\n        data={data}\n        width={400}\n        height={400}\n        options={{\n          maintainAspectRatio: true\n        }}\n      />\n      <input id=\"graphCountry\" onChange={changeSelectedCountry}></input>\n    </div>\n  )\n}\nexport default Graph"]},"metadata":{},"sourceType":"module"}